#ifndef PATCH_H
#define PATCH_H

#include <inttypes.h>

#define TWO_PI 6.283185307

#define WAVE_SIN 0
#define WAVE_SAW 1
#define WAVE_RAMP 2
#define WAVE_RECT 3


#define C0 46000
#define OCT 4080
#define Q5  2380
#define C1 (C0-OCT)
#define C2 (C1-OCT)
#define C3 (C2-OCT)
#define G0 (C0-Q5)
#define G1 (C1-Q5)


/*
static uint16_t PITCH_TABLE[128] = {
C0,G0,C1,G1,C2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};
*/

static uint16_t PITCH_TABLE[128] = {46000,45660,45320,44980,44640,44300,43960,43620,43280,42940,42600,42260,41920,41580,41240,40900,40560,40220,39880,39540,39200,38860,38520,38180,37840,37500,37160,36820,36480,36140,35800,35460,35120,34780,34440,34100,33760,33420,33080,32740,32400,32060,31720,31380,31040,30700,30360,30020,29680,29340,29000,28660,28320,27980,27640,27300,26960,26620,26280,25940,25600,25260,24920,24580,24240,23900,23560,23220,22880,22540,22200,21860,21520,21180,20840,20500,20160,19820,19480,19140,18800,18460,18120,17780,17440,17100,16760,16420,16080,15740,15400,15060,14720,14380,14040,13700,13360,13020,12680,12340,12000,11660,11320,10980,10640,10300,9960,9620,9280,8940,8600,8260,7920,7580,7240,6900,6560,6220,5880,5540,5200,4860,4520,4180,3840,3500,3160,2820};
static uint16_t FREQ_TABLE[128] = {1600,1978,2356,2734,3112,3490,3868,4246,4625,5003,5381,5759,6137,6515,6893,7271,7650,8028,8406,8784,9162,9540,9918,10296,10675,11053,11431,11809,12187,12565,12943,13321,13700,14078,14456,14834,15212,15590,15968,16346,16725,17103,17481,17859,18237,18615,18993,19371,19750,20128,20506,20884,21262,21640,22018,22396,22775,23153,23531,23909,24287,24665,25043,25421,25800,26178,26556,26934,27312,27690,28068,28446,28825,29203,29581,29959,30337,30715,31093,31471,31850,32228,32606,32984,33362,33740,34118,34496,34875,35253,35631,36009,36387,36765,37143,37521,37900,38278,38656,39034,39412,39790,40168,40546,40925,41303,41681,42059,42437,42815,43193,43571,43950,44328,44706,45084,45462,45840,46218,46596,46975,47353,47731,48109,48487,48865,49243,49621};


uint8_t gui_params[32];
typedef struct Rand {
	float v;
	int cnt;
	int ds;
	float A;
} Rand;


typedef struct Clock {
	float v;
	int cnt;
	int ds;
	float lastV;
} Clock;


typedef struct Lfo {
	float p;
	float f;
	float A;
	float v;
	int w;
} Lfo;


typedef struct State {
	uint8_t trOut[4];
	uint8_t trIn[4];
	float cvOut[4];
	uint16_t encLeds;
} State;

typedef struct StateInp {
	uint8_t trIn[4];
	int buttons[8];
	int encoders[16];
} StateInp;


StateInp _stateInp;
State state0;

int sign (float x);
void updateClock (Clock* clock, float dt);
void updateRand (Rand* rnd, float dt);
void updateLfo (Lfo* lfo, float dt);

void Patch_init (State* state);

void Patch_updateLFO (State* state);
void Patch_updateInputLFO (StateInp* state);

void Patch_updateSEQ (State* state);
void Patch_updateInputSEQ (StateInp* state);


#endif





